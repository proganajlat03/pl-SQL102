Q1) 
BEGIN 
	DBMS_OUTPUT.PUT_LINE(‘Hello World’);
END;
1) Add a declarative section to this PL/SQL block. In the declarative section, declare the following variables: 
a. A variable named TODAY of datatype DATE. Initialize TODAY with SYSDATE. 
b. A variable named TOMORROW with the same datatype as TODAY. Use the %TYPE attribute to declare this variable. 
2) In the executable section, initialize the TOMORROW variable with an expression that calculates tomorrow’s date (add 1 to the value in TODAY). Print the value of TODAY and TOMORROW after printing ‘Hello World’.
DECLARE
    TODAY DATE := SYSDATE;
    TOMORROW TODAY%TYPE; 
BEGIN 
    DBMS_OUTPUT.PUT_LINE('Hello World');
    TOMORROW := TODAY + 1;
    DBMS_OUTPUT.PUT_LINE('Today: ' || TO_CHAR(TODAY, 'DD-MON-YYYY'));
    DBMS_OUTPUT.PUT_LINE('Tomorrow: ' || TO_CHAR(TOMORROW, 'DD-MON-YYYY'));
END;




3) Write an anonymous PL/SQL block that uses today's date and outputs it in the format of ‘Month dd, yyyy’. Store the date in a DATE variable called my_date. Create another variable of the DATE type called v_last_day. Assign the last day of this month to v_last_day. Display the value of v_last_day.
DECLARE
    my_date DATE := SYSDATE; 
	v_last_day DATE;
BEGIN
    v_last_day := LAST_DAY(my_date);
    DBMS_OUTPUT.PUT_LINE('Today is date: ' || TO_CHAR(my_date, 'Month DD, YYYY'));
    DBMS_OUTPUT.PUT_LINE('Last day of this month: ' || TO_CHAR(v_last_day, 'Month DD, YYYY'));
END;
4) Modify the program created in question 3 to add 45 days to today’s date and then calculate and display the number of months between the two dates.
DECLARE
    my_date DATE := SYSDATE;
    v_last_day DATE;
    v_new_date DATE;
    months_between_dates NUMBER;
BEGIN
    v_last_day := LAST_DAY(my_date);
    v_new_date := my_date + 45; 
    months_between_dates := MONTHS_BETWEEN(v_new_date, my_date); 
    DBMS_OUTPUT.PUT_LINE('Today date: ' || TO_CHAR(my_date, 'Month DD, YYYY'));
    DBMS_OUTPUT.PUT_LINE('Last day of this month: ' || TO_CHAR(v_last_day, 'Month DD, YYYY'));
    DBMS_OUTPUT.PUT_LINE('New date after adding 45 days: ' || TO_CHAR(v_new_date, 'Month DD, YYYY'));
    DBMS_OUTPUT.PUT_LINE('Months between the two dates: ' || TRUNC(months_between_dates));
END;



Q2) Create table called countries with two columns named country_name, median_age. using SQL code. Then insert several records to the table. Evaluate the variables in the following PL/SQL code. Change the declarations so they use the %TYPE attribute. Also rewrite code using Explicit cursor. 
DECLARE 
country_name VARCHAR2(50);
 median_age NUMBER(6, 2);
 BEGIN
 SELECT country_name, median_age INTO country_name, median_age FROM countries
 WHERE country_name = 'Japan';
 DBMS_OUTPUT.PUT_LINE('The median age in '|| country_name || ' is ' || median_age || '.');
 END;
CREATE TABLE countries (
    country_name VARCHAR2(50),
    median_age NUMBER(6, 2)
);
--------------
INSERT INTO countries (country_name, median_age) VALUES ('Jordan', 65.2);
INSERT INTO countries (country_name, median_age) VALUES ('Qatar', 20.9);
INSERT INTO countries (country_name, median_age) VALUES ('USA', 85.0);
--------------------
DECLARE
    v_country_name countries.country_name%TYPE;
    v_median_age countries.median_age%TYPE;
BEGIN
    SELECT country_name, median_age
    INTO v_country_name, v_median_age
    FROM countries
    WHERE country_name = 'Jordan';
    DBMS_OUTPUT.PUT_LINE('The median age in ' || v_country_name || ' is ' || v_median_age);
END;
-------------------
DECLARE
    CURSOR country_cursor IS
        SELECT country_name, median_age
        FROM countries
        WHERE country_name = 'USA';
    v_country_name countries.country_name%TYPE;
    v_median_age countries.median_age%TYPE;
BEGIN
    OPEN country_cursor;
    FETCH country_cursor INTO v_country_name, v_median_age;
    IF country_cursor%FOUND THEN
        DBMS_OUTPUT.PUT_LINE('The median age in ' || v_country_name || ' is ' || v_median_age);
    ELSE
        DBMS_OUTPUT.PUT_LINE('No data found.');
    END IF;
    CLOSE country_cursor;
END;

